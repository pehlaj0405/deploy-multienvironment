name: Terraform CI/CD

on:
  push:
    branches:
      - '**'  # Trigger on all branches

jobs:
  terraform-uat:
    name: Terraform Deploy to UAT
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.6

      - name: Terraform Init, Plan, Apply for UAT
        run: |
          terraform init -input=false
          terraform plan -input=false -out=tfplan
          terraform apply -input=false tfplan

  terraform-prod:
    name: Terraform Deploy to PROD
    runs-on: ubuntu-latest
    needs: terraform-uat  # Wait for UAT deployment
    environment:
      name: prod  # Enable manual approval in GitHub settings
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.6

      - name: Terraform Init, Plan, Apply for PROD
        run: |
          terraform init -input=false
          terraform plan -input=false -out=tfplan
          terraform apply -input=false tfplan
